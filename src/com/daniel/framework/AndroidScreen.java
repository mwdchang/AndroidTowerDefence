package com.daniel.framework;

////////////////////////////////////////////////////////////////////////////////
// Represents one screen in the game activity
////////////////////////////////////////////////////////////////////////////////
public abstract class AndroidScreen {
   
   
   public abstract void pause();
   public abstract void resume();
   public abstract void displose();
   
   
   ////////////////////////////////////////////////////////////////////////////////
   // Any openGL related initializations should go here,
   // Graphics related initializations are to be
   // called on a thread with openGL context
   ////////////////////////////////////////////////////////////////////////////////
   public abstract void init();
   
   ////////////////////////////////////////////////////////////////////////////////
   // This is the main part of the AndroidScreen, each update cycle
   // should do the following, in order:
   // 1) Grab and process the touch events
   // 2) Update any game state or logic
   // 3) Clear rendering engine
   // 4) Add entities to rendering engine
   ////////////////////////////////////////////////////////////////////////////////
   public abstract void update(float dTime);
   
   
   ////////////////////////////////////////////////////////////////////////////////
   // Generic navigation
   ////////////////////////////////////////////////////////////////////////////////
   public AndroidScreen next;
   public AndroidScreen prev;
   
   
   public AndroidGame androidGame;
   public boolean doneInit = false;
}
